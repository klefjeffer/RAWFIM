// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RAWFIM.Data;

#nullable disable

namespace RAWFIM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220830143625_InitialBuild")]
    partial class InitialBuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RAWFIM.Models.Affectation_Materiel", b =>
                {
                    b.Property<int>("Id_affectation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_affectation"), 1L, 1);

                    b.Property<DateTime>("Date_affectation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Id_demande")
                        .HasColumnType("int");

                    b.Property<string>("Id_demandeur")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id_machine")
                        .HasColumnType("int");

                    b.Property<string>("Id_validateur")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_affectation");

                    b.HasIndex("Id_demande");

                    b.HasIndex("Id_demandeur");

                    b.HasIndex("Id_machine");

                    b.HasIndex("Id_validateur");

                    b.ToTable("Affectation_Materiels");
                });

            modelBuilder.Entity("RAWFIM.Models.Agent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Id_division")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Matricule_agent")
                        .HasColumnType("int");

                    b.Property<string>("Nom_agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Prenom_agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Id_division");

                    b.HasIndex("Matricule_agent")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("RAWFIM.Models.Demande", b =>
                {
                    b.Property<int>("Id_demande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_demande"), 1L, 1);

                    b.Property<DateTime>("Date_demande")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desctription_demande")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id_agent")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id_type_machine")
                        .HasColumnType("int");

                    b.HasKey("Id_demande");

                    b.HasIndex("Id_agent");

                    b.HasIndex("Id_type_machine");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("RAWFIM.Models.Division", b =>
                {
                    b.Property<int>("Id_division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_division"), 1L, 1);

                    b.Property<string>("Id_chef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nom_division")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_division");

                    b.HasIndex("Id_chef");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("RAWFIM.Models.Marque", b =>
                {
                    b.Property<int>("Id_marque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_marque"), 1L, 1);

                    b.Property<string>("Nom_marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_marque");

                    b.ToTable("Marques");
                });

            modelBuilder.Entity("RAWFIM.Models.Materiel", b =>
                {
                    b.Property<int>("Id_machine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_machine"), 1L, 1);

                    b.Property<DateTime>("Date_fin_garantie")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_reception")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description_machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id_marque")
                        .HasColumnType("int");

                    b.Property<int?>("Id_type_machine")
                        .HasColumnType("int");

                    b.Property<string>("Nom_machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Num_marché")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantite_stock")
                        .HasColumnType("int");

                    b.HasKey("Id_machine");

                    b.HasIndex("Id_marque");

                    b.HasIndex("Id_type_machine");

                    b.ToTable("Materiels");
                });

            modelBuilder.Entity("RAWFIM.Models.Transfert_Materiel", b =>
                {
                    b.Property<int>("Id_emprunt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_emprunt"), 1L, 1);

                    b.Property<DateTime>("Date_emprunt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_affectation")
                        .HasColumnType("int");

                    b.Property<string>("Matricule_agent_empruntant")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Matricule_agent_emprunteur")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_emprunt");

                    b.HasIndex("Id_affectation");

                    b.HasIndex("Matricule_agent_empruntant");

                    b.HasIndex("Matricule_agent_emprunteur");

                    b.ToTable("Transfert_Materiels");
                });

            modelBuilder.Entity("RAWFIM.Models.Type_Machine", b =>
                {
                    b.Property<int>("Id_type_machine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_type_machine"), 1L, 1);

                    b.Property<string>("Description_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_type_machine");

                    b.ToTable("Type_Machines");
                });

            modelBuilder.Entity("RAWFIM.Models.Validation_admin", b =>
                {
                    b.Property<int>("Id_demande")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_decision")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id_validateur")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Motif_refus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status_validation")
                        .HasColumnType("bit");

                    b.HasKey("Id_demande");

                    b.HasIndex("Id_validateur");

                    b.ToTable("Validations_admin");
                });

            modelBuilder.Entity("RAWFIM.Models.Validation_chef", b =>
                {
                    b.Property<int>("Id_demande")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_decision")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id_validateur")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Motif_refus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status_validation")
                        .HasColumnType("bit");

                    b.HasKey("Id_demande");

                    b.HasIndex("Id_validateur");

                    b.ToTable("Validations_chef");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RAWFIM.Models.Agent", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RAWFIM.Models.Agent", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAWFIM.Models.Agent", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RAWFIM.Models.Agent", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RAWFIM.Models.Affectation_Materiel", b =>
                {
                    b.HasOne("RAWFIM.Models.Demande", "Demande")
                        .WithMany()
                        .HasForeignKey("Id_demande");

                    b.HasOne("RAWFIM.Models.Agent", "Agent_demandeur")
                        .WithMany()
                        .HasForeignKey("Id_demandeur");

                    b.HasOne("RAWFIM.Models.Materiel", "Materiel")
                        .WithMany()
                        .HasForeignKey("Id_machine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAWFIM.Models.Agent", "Agent_validateur")
                        .WithMany()
                        .HasForeignKey("Id_validateur");

                    b.Navigation("Agent_demandeur");

                    b.Navigation("Agent_validateur");

                    b.Navigation("Demande");

                    b.Navigation("Materiel");
                });

            modelBuilder.Entity("RAWFIM.Models.Agent", b =>
                {
                    b.HasOne("RAWFIM.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("Id_division");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("RAWFIM.Models.Demande", b =>
                {
                    b.HasOne("RAWFIM.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("Id_agent");

                    b.HasOne("RAWFIM.Models.Type_Machine", "Type_machine")
                        .WithMany()
                        .HasForeignKey("Id_type_machine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Type_machine");
                });

            modelBuilder.Entity("RAWFIM.Models.Division", b =>
                {
                    b.HasOne("RAWFIM.Models.Agent", "Chef")
                        .WithMany()
                        .HasForeignKey("Id_chef");

                    b.Navigation("Chef");
                });

            modelBuilder.Entity("RAWFIM.Models.Materiel", b =>
                {
                    b.HasOne("RAWFIM.Models.Marque", "Marque")
                        .WithMany()
                        .HasForeignKey("Id_marque");

                    b.HasOne("RAWFIM.Models.Type_Machine", "Type_machine")
                        .WithMany()
                        .HasForeignKey("Id_type_machine");

                    b.Navigation("Marque");

                    b.Navigation("Type_machine");
                });

            modelBuilder.Entity("RAWFIM.Models.Transfert_Materiel", b =>
                {
                    b.HasOne("RAWFIM.Models.Affectation_Materiel", "Affectation")
                        .WithMany()
                        .HasForeignKey("Id_affectation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAWFIM.Models.Agent", "Agent_empruntant")
                        .WithMany()
                        .HasForeignKey("Matricule_agent_empruntant");

                    b.HasOne("RAWFIM.Models.Agent", "Agent_emprunteur")
                        .WithMany()
                        .HasForeignKey("Matricule_agent_emprunteur");

                    b.Navigation("Affectation");

                    b.Navigation("Agent_empruntant");

                    b.Navigation("Agent_emprunteur");
                });

            modelBuilder.Entity("RAWFIM.Models.Validation_admin", b =>
                {
                    b.HasOne("RAWFIM.Models.Demande", "Demande")
                        .WithMany()
                        .HasForeignKey("Id_demande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAWFIM.Models.Agent", "Agent_validateur")
                        .WithMany()
                        .HasForeignKey("Id_validateur");

                    b.Navigation("Agent_validateur");

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("RAWFIM.Models.Validation_chef", b =>
                {
                    b.HasOne("RAWFIM.Models.Demande", "Demande")
                        .WithMany()
                        .HasForeignKey("Id_demande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAWFIM.Models.Agent", "Agent_validateur")
                        .WithMany()
                        .HasForeignKey("Id_validateur");

                    b.Navigation("Agent_validateur");

                    b.Navigation("Demande");
                });
#pragma warning restore 612, 618
        }
    }
}
